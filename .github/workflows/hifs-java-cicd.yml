name: Hifs Java CI/CD

on:
  push:
    branches: [main]
    paths:
      - "hifs_java/**"
  pull_request:
    branches: [main]
    paths:
      - "hifs_java/**"
  # 手动触发：你可以在 GitHub 页面上手动点击按钮来触发工作流
  workflow_dispatch:

env:
  SOURCE_DIR: hifs_java
  DOCKER_DIR: hifs_java/docker
  DEPLOY_DIR: /opt/hifs # 服务器目标目录
  CONTAINER_NAME: jar-builder-${{ github.run_id }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # =====================================
      # 阶段1：构建JAR到本地docker/app目录
      # =====================================
      - uses: actions/checkout@v4

      # 设置 JDK 并配置 Maven 缓存
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"
          cache-dependency-path: |
            hifs_java/**/pom.xml
            hifs_java/pom.xml

      # 构建项目
      - name: Build with Maven
        working-directory: ${{ env.SOURCE_DIR }}
        run: |
          mvn clean package -DskipTests

          # 创建 app 目录
          mkdir -p ../docker/app

          # 查找并移动启动器 JAR
          MAIN_JAR=$(find . -name "booter*.jar" -not -path "*/target/original-*.jar")
          if [ -z "$MAIN_JAR" ]; then
            echo "❌ 错误：未找到主模块 JAR 文件"
            exit 1
          fi

          # 移动并重命名 JAR
          cp "$MAIN_JAR" "../docker/app/application.jar"
          echo "✅ JAR 已复制到 docker/app 目录"

          # 显示结果
          ls -l ../docker/app/

      # =====================================
      # 阶段2：传输整个docker目录到服务器
      # =====================================
      - name: Transfer Full Docker Dir
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }} # 指定 SSH 端口
          source: "$DOCKER_DIR/**" # 传输整个docker目录
          target: "$DEPLOY_DIR/"
          strip_components:
            3 # 路径转换示例：
            # hifs_java/docker/file → DEPLOY_DIR/file
            # hifs_java/docker/app/file.jar → DEPLOY_DIR/app/file.jar
          overwrite: true

      # =====================================
      # 阶段3：触发服务器部署（使用现有脚本）
      # =====================================
      - name: Execute Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }} # 指定 SSH 端口
          script: |
            cd $DEPLOY_DIR
            chmod +x deploy.sh  # 确保可执行权限
            ./deploy.sh prod
